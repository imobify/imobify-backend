// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [postgis, pgcrypto]
}

model User {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  email String @unique
  document String @unique
  hash String
  avatar_url String?

  type UserType @relation(fields: [type_id], references: [id])
  type_id Int

  listings RealEstateListing[]
  leads Lead[]
  favorites Favorite[]

  @@map("user")
}

model UserType {
  id Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type String @unique

  users User[]

  @@map("user_type")
}

model RealEstate {
  id Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  description String
  address String
  area Float
  selling_value Float
  renting_value Float
  tax_value Float
  coordinates Unsupported("geometry(Point, 4326)")

  listing RealEstateListing?
  leads Lead[]
  favorites Favorite[]
  photos RealEstatePhoto[]

  @@index([coordinates], name: "location_idx", type: Gist)
  @@map("real_estate")
}

model RealEstateListing {
  id Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author User @relation(fields: [author_id], references: [id])
  author_id String @db.Uuid
  realEstate RealEstate @relation(fields: [realEstate_id], references: [id])
  realEstate_id Int @unique

  @@map("listing")
}

model Lead {
  id Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author User @relation(fields: [author_id], references: [id])
  author_id String @db.Uuid
  realEstate RealEstate @relation(fields: [realEstate_id], references: [id])
  realEstate_id Int

  @@map("lead")
}

model Favorite {
  id Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author User @relation(fields: [author_id], references: [id])
  author_id String @db.Uuid
  realEstate RealEstate @relation(fields: [realEstate_id], references: [id])
  realEstate_id Int

  @@map("favorite")
}

model RealEstatePhoto {
  id Int @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  photoUrl String

  realEstate RealEstate @relation(fields: [realEstate_id], references: [id])
  realEstate_id Int

  @@map("real_estate_photo")
}